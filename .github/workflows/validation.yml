name: validation
on:
  pull_request:
    branches:
      - main
    paths-ignore:
      - '**/*.md'
  push:
    branches:
      - main
    paths-ignore:
      - '**/*.md'
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
env:
  CI: true
  GRADLE_OPTS: -Dkotlin.incremental=false -Dorg.gradle.jvmargs="-Xmx4g -XX:+HeapDumpOnOutOfMemoryError"
  TERM: dumb
jobs:
  assemble:
    name: Assemble
    runs-on: macos-11
    env:
      JAVA_TOOL_OPTIONS: -Xmx4g -XX:+UseParallelGC

    steps:
      - uses: actions/checkout@v3
      - uses: gradle/wrapper-validation-action@v1
      - uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '11'
      - uses: gradle/gradle-build-action@v2
      - name: Assemble
        run: ./gradlew assemble

  checks:
    name: Checks (unit tests, static analysis and binary compatibility API check)
    runs-on: macos-11
    env:
      JAVA_TOOL_OPTIONS: -Xmx4g -XX:+UseParallelGC

    steps:
      - uses: actions/checkout@v3
      - uses: gradle/wrapper-validation-action@v1
      - uses: actions/cache@v2
        with:
          path: ~/.konan
          key: ${{ runner.os }}-konan-${{ hashFiles('**/*.gradle*') }}-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-konan-
      - uses: actions/cache@v2
        with:
          path: ~/.gradle
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-gradle-
      - uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '11'
      - uses: gradle/gradle-build-action@v2
      - name: Check
        run: ./gradlew check publishToMavenLocal
